import re
import nltk
from collections import OrderedDict
from nltk import PorterStemmer
from nltk.stem.wordnet import WordNetLemmatizer
from nltk.corpus import stopwords

lmtzr = WordNetLemmatizer()
porter_stem = PorterStemmer()
wordnet_tag ={'NN':'n','JJ':'a','VB':'v','RB':'r'}

class DataClean:

    def removeFreqone(self,list):
        new_list={}
        for a in list :
            try:
                new_list[a] += 1
            except:
                new_list[a] = 0
        return [a for a in new_list.keys() if new_list[a] > 0]

    def __init__(self,text):
        data = text.translate('\n\t;:?><,._+=-)(*&^%$#@!{}[]/').lower()
        tokens = nltk.word_tokenize(data)
        tagged = nltk.pos_tag(tokens)
        word_list = []
        for t in tagged:
            try:
                word_list.append(lmtzr.lemmatize(t[0],wordnet_tag[t[1][:2]]))
            except:
                word_list.append(porter_stem.stem_word(t[0]))

        self.filtered_words = [w for w in word_list if not w in stopwords.words('english')]

        #Now removal of terms with frequency =1  [ paper mentions about this ]
        self.filtered_words = self.removeFreqone(self.filtered_words)


    def GetData(self):
        return self.filtered_words




def seperateWords(text):
	'''
		take string into input and return a list of words seperated by digits,non-ascii 		characters,escape sequences,..etc
	'''
	print('input text',text)
	text=re.sub("\d+|\?|[^a-zA-Z ]", " ", text)
	words=re.findall(r"[\w']+",text)
	print('words',words)
	return words
	#return nltk.word_tokenize(text) //Avoiding due to presence of un significant words
	
def convertToLower(words):
	'''
		input : words=>List of words in mixed case
		output : words=>List of words in small case
	'''
	
	for i in range(0,len(words)):
		words[i]=words[i].lower()
	return words

def removeStopWords(words):
	'''
		input : words=>List of words
		output : words=>List of words after removing stop words
	'''
	stop_words=['a', 'able', 'about', 'above', 'abst', 'accordance', 'according',\
	'accordingly', 'across', 'act', 'actually', 'added', 'adj', 'affected', 'affecting',\
	'affects', 'after', 'afterwards', 'again', 'against', 'ah', 'all', 'almost', 'alone',\
	'along', 'already', 'also', 'although', 'always', 'am', 'among', 'amongst', 'an',\
	'and', 'announce', 'another', 'any', 'anybody', 'anyhow', 'anymore', 'anyone',\
	'anything', 'anyway', 'anyways', 'anywhere', 'apparently', 'approximately', 'are',\
	'aren', 'arent', 'arise', 'around', 'as', 'aside', 'ask', 'asking', 'at', 'auth',\
	'available', 'away', 'awfully', 'b', 'back', 'be', 'became', 'because', 'become',\
	'becomes', 'becoming', 'been', 'before', 'beforehand', 'begin', 'beginning',\
	'beginnings', 'begins', 'behind', 'being', 'believe', 'below', 'beside', 'besides',\
	'between', 'beyond', 'biol', 'both', 'brief', 'briefly', 'but', 'by', 'c', 'ca',\
	'came', 'can', 'cannot', "can't", 'cause', 'causes', 'certain', 'certainly', 'co',\
	'com', 'come', 'comes', 'contain', 'containing', 'contains', 'could', 'couldnt', 'd',\
	'date', 'did', "didn't", 'different', 'do', 'does', "doesn't", 'doing', 'done',\
	"don't", 'down', 'downwards', 'due', 'during', 'e', 'each', 'ed', 'edu', 'effect',\
	'eg', 'eight', 'eighty', 'either', 'else', 'elsewhere', 'end', 'ending', 'enough',\
	'especially', 'et', 'et-al', 'etc', 'even', 'ever', 'every', 'everybody', 'everyone',\
	'everything', 'everywhere', 'ex', 'except', 'f', 'far', 'few', 'ff', 'fifth',\
	'first', 'five', 'fix', 'followed', 'following', 'follows', 'for', 'former',\
	'formerly', 'forth', 'found', 'four', 'from', 'further', 'furthermore', 'g',\
	'gave', 'get', 'gets', 'getting', 'give', 'given', 'gives', 'giving', 'go', 'goes',\
	'gone', 'got', 'gotten', 'h', 'had', 'happens', 'hardly', 'has', "hasn't", 'have',\
	"haven't", 'having', 'he', 'hed', 'hence', 'her', 'here', 'hereafter', 'hereby',\
	'herein', 'heres', 'hereupon', 'hers', 'herself', 'hes', 'hi', 'hid', 'him',\
	'himself', 'his', 'hither', 'home', 'how', 'howbeit', 'however', 'hundred', 'i', 'id',\
	'ie', 'if', "i'll", 'im', 'immediate', 'immediately', 'importance', 'important', 'in',\
	'inc', 'indeed', 'index', 'information', 'instead', 'into', 'invention', 'inward',\
	'is', "isn't", 'it', 'itd', "it'll", 'its', 'itself', "i've", 'j', 'just', 'k', 'keep',\
	'keeps', 'kept', 'kg', 'km', 'know', 'known', 'knows', 'l', 'largely', 'last',\
	'lately', 'later', 'latter', 'latterly', 'least', 'less', 'lest', 'let', 'lets',\
	'like', 'liked', 'likely', 'line', 'little', "'ll", 'look', 'looking', 'looks', 'ltd',\
	'm', 'made', 'mainly', 'make', 'makes', 'many', 'may', 'maybe', 'me', 'mean',\
	'means', 'meantime', 'meanwhile', 'merely', 'mg', 'might', 'million', 'miss', 'ml',\
	'more', 'moreover', 'most', 'mostly', 'mr', 'mrs', 'much', 'mug', 'must', 'my',\
	'myself', 'n', 'na', 'name', 'namely', 'nay', 'nd', 'near', 'nearly', 'necessarily',\
	'necessary', 'need', 'needs', 'neither', 'never', 'nevertheless', 'new', 'next',\
	'nine', 'ninety', 'no', 'nobody', 'non', 'none', 'nonetheless', 'noone', 'nor',\
	'normally', 'nos', 'not', 'noted', 'nothing', 'now', 'nowhere', 'o', 'obtain',\
	'obtained', 'obviously', 'of', 'off', 'often', 'oh', 'ok', 'okay', 'old', 'omitted',\
	'on', 'once', 'one', 'ones', 'only', 'onto', 'or', 'ord', 'other', 'others',\
	'otherwise', 'ought', 'our', 'ours', 'ourselves', 'out', 'outside', 'over',\
	'overall', 'owing', 'own', 'p', 'page', 'pages', 'part', 'particular',\
	'particularly', 'past', 'per', 'perhaps', 'placed', 'please', 'plus', 'poorly',\
	'possible', 'possibly', 'potentially', 'pp', 'predominantly', 'present', 'previously',\
	'primarily', 'probably', 'promptly', 'proud', 'provides', 'put', 'q', 'que',\
	'quickly', 'quite', 'qv', 'r', 'ran', 'rather', 'rd', 're', 'readily', 'really',\
	'recent', 'recently', 'ref', 'refs', 'regarding', 'regardless', 'regards',\
	'related', 'relatively', 'research', 'respectively', 'resulted', 'resulting',\
	'results', 'right', 'run', 's', 'said', 'same', 'saw', 'say', 'saying', 'says', 'sec',\
	'section', 'see', 'seeing', 'seem', 'seemed', 'seeming', 'seems', 'seen', 'self',\
	'selves', 'sent', 'seven', 'several', 'shall', 'she', 'shed', "she'll", 'shes',\
	'should', "shouldn't", 'show', 'showed', 'shown', 'showns', 'shows', 'significant',\
	'significantly', 'similar', 'similarly', 'since', 'six', 'slightly', 'so', 'some',\
	'somebody', 'somehow', 'someone', 'somethan', 'something', 'sometime', 'sometimes',\
	'somewhat', 'somewhere', 'soon', 'sorry', 'specifically', 'specified', 'specify',\
	'specifying', 'still', 'stop', 'strongly', 'sub', 'substantially', 'successfully',\
	'such', 'sufficiently', 'suggest', 'sup', 'sure', 't', 'take', 'taken', 'taking',\
	'tell', 'tends', 'th', 'than', 'thank', 'thanks', 'thanx', 'that', "that'll", 'thats',\
	"that've", 'the', 'their', 'theirs', 'them', 'themselves', 'then', 'thence', 'there',\
	'thereafter', 'thereby', 'thered', 'therefore', 'therein', "there'll", 'thereof',\
	'therere', 'theres', 'thereto', 'thereupon', "there've", 'these', 'they', 'theyd',\
	"they'll", 'theyre', "they've", 'think', 'this', 'those', 'thou', 'though', 'thoughh',\
	'thousand', 'throug', 'through', 'throughout', 'thru', 'thus', 'til', 'tip', 'to',\
	'together', 'too', 'took', 'toward', 'towards', 'tried', 'tries', 'truly', 'try',\
	'trying', 'ts', 'twice', 'two', 'u', 'un', 'under', 'unfortunately', 'unless',\
	'unlike', 'unlikely', 'until', 'unto', 'up', 'upon', 'ups', 'us', 'use', 'used',\
	'useful', 'usefully', 'usefulness', 'uses', 'using', 'usually', 'v', 'value',\
	'various', "'ve", 'very', 'via', 'viz', 'vol', 'vols', 'vs', 'w', 'want', 'wants',\
	'was', "wasn't", 'way', 'we', 'wed', 'welcome', "we'll", 'went', 'were', "weren't",\
	"we've", 'what', 'whatever', "what'll", 'whats', 'when', 'whence', 'whenever', 'where',\
	'whereafter', 'whereas', 'whereby', 'wherein', 'wheres', 'whereupon', 'wherever',\
	'whether', 'which', 'while', 'whim', 'whither', 'who', 'whod', 'whoever', 'whole',\
	"who'll", 'whom', 'whomever', 'whos', 'whose', 'why', 'widely', 'willing', 'wish',\
	'with', 'within', 'without', "won't", 'words', 'world', 'would', "wouldn't", 'www',\
	'x', 'y', 'yes', 'yet', 'you', 'youd', "you'll", 'your', 'youre', 'yours', 'yourself',\
	'yourse', 'you', 'z', 'zero','login','email','feedback','sitemap']
	
	for a in stop_words:
		while a in words:
			words.remove(a)
	print('after removing stop words',words)
	return words

def applyStemming(words):
	'''
		input: words=>List of words
		output: temp=>List of stemmed words
	'''
	stemmer=nltk.PorterStemmer()
	temp=[]
	for word in words:
		temp.append(stemmer.stem_word(word))
	print('after stemming',temp)
	return temp
	
def genFreqDict(words):
	'''
		input : words=>List of words
		output : freq=>Dictionary containing frequency of each words
	'''
	words.sort()
	freq=OrderedDict()
	for word in words:
		if word in freq:
			freq[word]+=1
		else:
			freq[word]=1
	print('frequency list',freq)
	return freq

def removeAnom(freq):
	'''
		remove words having frequency less than 2
	'''
	nfreq={}
	for word in freq:
		if freq[word]>2:
			nfreq[word]=freq[word]
	return nfreq

def removeSmallWords(words):
	'''
		remove words having length less than 3
	'''
	t=[]
	for word in words:
		if len(word)>2:
			t.append(word)
	return t


